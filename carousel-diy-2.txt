{% doc %}
  @prompt
    create a new module/section.  include two columns. the left column should hold an image with 8px rounded corners and some padding on all sides. the right column should hold left aligned text sections for a header, subhead, and body copy. below the text should be a small buy product card that allows one product to be featured and clicking will take the user to that product. the entire module should be able to have a background color set. Apply the typography structure used throughout the rest of the site; header: <H2 class="h2"> and subhead: <p class="subheading"> put 40px space between the body copy and the product card. vertically center the right column in the module. Make this a carousel that can have up to 5 slides, and automatically adjusts to the amount of slides there are. give the carousel bottom dot pagination style controls to indicate which slide is selected. include small left and right controls with the dot pagination to allow users to navigate to the next or previous slide. auto advance to the next slide after 30 seconds. center the controls and include padding below them about 20px., allow setting the background color per slide instead of globally, make the product card flow horizontally and be small. left to right: product image. line one product title, line two price. make sure the dot pagination and arrows are functional. make slide transitions a gentle fade. only add a slide if the slide content is filled out in the editor. when adding content in the editor for the slide, advance to that specific slide to show a live preview of the edits and additions, add dot style pagination with left and right navigation arrows. add a gentle fade transition when the slides switch. auto advance to the next slide after 30 seconds., make the product card small and less wide than it currently is. keep it horizontal, give it a white background and 8px corner radius. keep everything else as is without further changes., keep everything as it is, with no additional changes - except - add a gentle fade transition between slides when advancing to the next slide, keep everything exactly as it is, except change the transition between slides to be a cross dissolve instead of a fade, Keep everything exactly as it is, except constrain the width of the heading, subheading and body text to be max-width of 600px.
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-carousel-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .ai-carousel-slides-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
  }

  .ai-carousel-slide-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    opacity: 0;
    transition: opacity 0.6s ease-in-out;
    padding: 40px;
    pointer-events: none;
  }

  .ai-carousel-slide-{{ ai_gen_id }}.active {
    position: relative;
    opacity: 1;
    pointer-events: auto;
  }

  .ai-carousel-content-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 40px;
    align-items: center;
    max-width: 1200px;
    margin: 0 auto;
  }

  .ai-carousel-image-wrapper-{{ ai_gen_id }} {
    padding: 20px;
  }

  .ai-carousel-image-{{ ai_gen_id }} {
    width: 100%;
    height: auto;
    border-radius: 8px;
    display: block;
  }

  .ai-carousel-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    aspect-ratio: 4 / 3;
    border-radius: 8px;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-carousel-image-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 300px;
    max-height: 300px;
  }

  .ai-carousel-text-wrapper-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .ai-carousel-heading-{{ ai_gen_id }} {
    margin: 0 0 16px 0;
    max-width: 600px;
  }

  .ai-carousel-subheading-{{ ai_gen_id }} {
    margin: 0 0 16px 0;
    max-width: 600px;
  }

  .ai-carousel-body-{{ ai_gen_id }} {
    margin: 0 0 40px 0;
    line-height: 1.6;
    max-width: 600px;
  }

  .ai-carousel-product-card-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 12px;
    text-decoration: none;
    color: inherit;
    transition: opacity 0.3s ease;
    background-color: #ffffff;
    border-radius: 8px;
    padding: 12px;
    max-width: 280px;
  }

  .ai-carousel-product-card-{{ ai_gen_id }}:hover {
    opacity: 0.8;
  }

  .ai-carousel-product-image-{{ ai_gen_id }} {
    width: 60px;
    height: 60px;
    flex-shrink: 0;
    border-radius: 4px;
    object-fit: cover;
  }

  .ai-carousel-product-image-placeholder-{{ ai_gen_id }} {
    width: 60px;
    height: 60px;
    flex-shrink: 0;
    border-radius: 4px;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-carousel-product-image-placeholder-{{ ai_gen_id }} svg {
    width: 30px;
    height: 30px;
  }

  .ai-carousel-product-info-{{ ai_gen_id }} {
    flex: 1;
  }

  .ai-carousel-product-title-{{ ai_gen_id }} {
    margin: 0 0 4px 0;
    font-size: 13px;
    font-weight: 600;
  }

  .ai-carousel-product-price-{{ ai_gen_id }} {
    margin: 0;
    font-size: 13px;
  }

  .ai-carousel-controls-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 16px;
    padding: 20px 0;
  }

  .ai-carousel-arrow-{{ ai_gen_id }} {
    background: none;
    border: none;
    cursor: pointer;
    padding: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: opacity 0.3s ease;
  }

  .ai-carousel-arrow-{{ ai_gen_id }}:hover {
    opacity: 0.7;
  }

  .ai-carousel-arrow-{{ ai_gen_id }} svg {
    width: 20px;
    height: 20px;
  }

  .ai-carousel-dots-{{ ai_gen_id }} {
    display: flex;
    gap: 8px;
  }

  .ai-carousel-dot-{{ ai_gen_id }} {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: #d0d0d0;
    border: none;
    cursor: pointer;
    padding: 0;
    transition: background-color 0.3s ease;
  }

  .ai-carousel-dot-{{ ai_gen_id }}.active {
    background-color: #272727;
  }

  @media screen and (max-width: 768px) {
    .ai-carousel-content-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: 24px;
    }

    .ai-carousel-slide-{{ ai_gen_id }} {
      padding: 20px;
    }

    .ai-carousel-image-wrapper-{{ ai_gen_id }} {
      padding: 10px;
    }
  }
{% endstyle %}

<carousel-slider-{{ ai_gen_id }} class="ai-carousel-container-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-carousel-slides-{{ ai_gen_id }}">
    {% for i in (1..5) %}
      {% liquid
        assign slide_image_key = 'slide_' | append: i | append: '_image'
        assign slide_heading_key = 'slide_' | append: i | append: '_heading'
        assign slide_subheading_key = 'slide_' | append: i | append: '_subheading'
        assign slide_body_key = 'slide_' | append: i | append: '_body'
        assign slide_product_key = 'slide_' | append: i | append: '_product'
        assign slide_bg_key = 'slide_' | append: i | append: '_background_color'

        assign slide_image = block.settings[slide_image_key]
        assign slide_heading = block.settings[slide_heading_key]
        assign slide_subheading = block.settings[slide_subheading_key]
        assign slide_body = block.settings[slide_body_key]
        assign slide_product = block.settings[slide_product_key]
        assign slide_bg = block.settings[slide_bg_key]

        assign has_content = false
        if slide_image != blank or slide_heading != blank or slide_subheading != blank or slide_body != blank or slide_product != blank
          assign has_content = true
        endif
      %}

      {% if has_content %}
        <div
          class="ai-carousel-slide-{{ ai_gen_id }} {% if forloop.first %}active{% endif %}"
          data-slide-index="{{ forloop.index }}"
          style="background-color: {{ slide_bg }};"
        >
          <div class="ai-carousel-content-{{ ai_gen_id }}">
            <div class="ai-carousel-image-wrapper-{{ ai_gen_id }}">
              {% if slide_image %}
                <img
                  src="{{ slide_image | image_url: width: 800 }}"
                  alt="{{ slide_image.alt | escape }}"
                  class="ai-carousel-image-{{ ai_gen_id }}"
                  loading="lazy"
                  width="{{ slide_image.width }}"
                  height="{{ slide_image.height }}"
                >
              {% else %}
                <div class="ai-carousel-image-placeholder-{{ ai_gen_id }}">
                  {{ 'image' | placeholder_svg_tag }}
                </div>
              {% endif %}
            </div>

            <div class="ai-carousel-text-wrapper-{{ ai_gen_id }}">
              {% if slide_heading != blank %}
                <h2 class="h2 ai-carousel-heading-{{ ai_gen_id }}">{{ slide_heading }}</h2>
              {% endif %}

              {% if slide_subheading != blank %}
                <p class="subheading ai-carousel-subheading-{{ ai_gen_id }}">{{ slide_subheading }}</p>
              {% endif %}

              {% if slide_body != blank %}
                <div class="ai-carousel-body-{{ ai_gen_id }}">{{ slide_body }}</div>
              {% endif %}

              {% if slide_product %}
                <a href="{{ slide_product.url }}" class="ai-carousel-product-card-{{ ai_gen_id }}">
                  {% if slide_product.featured_image %}
                    <img
                      src="{{ slide_product.featured_image | image_url: width: 120 }}"
                      alt="{{ slide_product.featured_image.alt | escape }}"
                      class="ai-carousel-product-image-{{ ai_gen_id }}"
                      loading="lazy"
                      width="60"
                      height="60"
                    >
                  {% else %}
                    <div class="ai-carousel-product-image-placeholder-{{ ai_gen_id }}">
                      {{ 'product-1' | placeholder_svg_tag }}
                    </div>
                  {% endif %}
                  <div class="ai-carousel-product-info-{{ ai_gen_id }}">
                    <div class="ai-carousel-product-title-{{ ai_gen_id }}">{{ slide_product.title }}</div>
                    <div class="ai-carousel-product-price-{{ ai_gen_id }}">{{ slide_product.price | money }}</div>
                  </div>
                </a>
              {% endif %}
            </div>
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>

  <div class="ai-carousel-controls-{{ ai_gen_id }}">
    <button class="ai-carousel-arrow-{{ ai_gen_id }} ai-carousel-prev-{{ ai_gen_id }}" aria-label="Previous slide">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="15 18 9 12 15 6"></polyline>
      </svg>
    </button>

    <div class="ai-carousel-dots-{{ ai_gen_id }}"></div>

    <button class="ai-carousel-arrow-{{ ai_gen_id }} ai-carousel-next-{{ ai_gen_id }}" aria-label="Next slide">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="9 18 15 12 9 6"></polyline>
      </svg>
    </button>
  </div>
</carousel-slider-{{ ai_gen_id }}>

<script>
  (function() {
    class CarouselSlider{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.autoplayInterval = null;
        this.autoplayDelay = 30000;
      }

      connectedCallback() {
        this.slides = Array.from(this.querySelectorAll('.ai-carousel-slide-{{ ai_gen_id }}'));
        this.dotsContainer = this.querySelector('.ai-carousel-dots-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('.ai-carousel-prev-{{ ai_gen_id }}');
        this.nextButton = this.querySelector('.ai-carousel-next-{{ ai_gen_id }}');

        if (this.slides.length === 0) return;

        this.createDots();
        this.setupEventListeners();
        this.startAutoplay();
        this.observeThemeEditorChanges();
      }

      createDots() {
        this.dotsContainer.innerHTML = '';
        this.slides.forEach((slide, index) => {
          const dot = document.createElement('button');
          dot.className = 'ai-carousel-dot-{{ ai_gen_id }}' + (index === 0 ? ' active' : '');
          dot.setAttribute('aria-label', 'Go to slide ' + (index + 1));
          dot.addEventListener('click', () => this.goToSlide(index));
          this.dotsContainer.appendChild(dot);
        });
      }

      setupEventListeners() {
        this.prevButton.addEventListener('click', () => this.previousSlide());
        this.nextButton.addEventListener('click', () => this.nextSlide());
      }

      goToSlide(index) {
        const currentSlideElement = this.slides[this.currentSlide];
        const nextSlideElement = this.slides[index];

        nextSlideElement.classList.add('active');
        nextSlideElement.style.opacity = '0';

        setTimeout(() => {
          nextSlideElement.style.opacity = '1';
          currentSlideElement.style.opacity = '0';
        }, 50);

        setTimeout(() => {
          currentSlideElement.classList.remove('active');
          currentSlideElement.style.opacity = '0';
          this.dotsContainer.children[this.currentSlide].classList.remove('active');

          this.currentSlide = index;
          this.dotsContainer.children[this.currentSlide].classList.add('active');
        }, 650);

        this.resetAutoplay();
      }

      nextSlide() {
        const nextIndex = (this.currentSlide + 1) % this.slides.length;
        this.goToSlide(nextIndex);
      }

      previousSlide() {
        const prevIndex = (this.currentSlide - 1 + this.slides.length) % this.slides.length;
        this.goToSlide(prevIndex);
      }

      startAutoplay() {
        this.autoplayInterval = setInterval(() => {
          this.nextSlide();
        }, this.autoplayDelay);
      }

      resetAutoplay() {
        clearInterval(this.autoplayInterval);
        this.startAutoplay();
      }

      observeThemeEditorChanges() {
        if (window.Shopify && window.Shopify.designMode) {
          const observer = new MutationObserver(() => {
            const newSlides = Array.from(this.querySelectorAll('.ai-carousel-slide-{{ ai_gen_id }}'));
            if (newSlides.length !== this.slides.length) {
              this.slides = newSlides;
              this.createDots();
              if (this.currentSlide >= this.slides.length) {
                this.currentSlide = 0;
              }
              this.goToSlide(this.currentSlide);
            }
          });

          observer.observe(this, {
            childList: true,
            subtree: true
          });

          document.addEventListener('shopify:block:select', (event) => {
            if (event.target === this || this.contains(event.target)) {
              const slideElements = Array.from(this.querySelectorAll('.ai-carousel-slide-{{ ai_gen_id }}'));
              const slideIndex = slideElements.findIndex(slide => slide.contains(event.target) || slide === event.target);
              if (slideIndex !== -1 && slideIndex !== this.currentSlide) {
                this.goToSlide(slideIndex);
              }
            }
          });
        }
      }

      disconnectedCallback() {
        clearInterval(this.autoplayInterval);
      }
    }

    customElements.define('carousel-slider-{{ ai_gen_id }}', CarouselSlider{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Image carousel",
  "settings": [
    {
      "type": "header",
      "content": "Slide 1"
    },
    {
      "type": "image_picker",
      "id": "slide_1_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_1_heading",
      "label": "Heading"
    },
    {
      "type": "text",
      "id": "slide_1_subheading",
      "label": "Subheading"
    },
    {
      "type": "richtext",
      "id": "slide_1_body",
      "label": "Body text"
    },
    {
      "type": "product",
      "id": "slide_1_product",
      "label": "Featured product"
    },
    {
      "type": "color",
      "id": "slide_1_background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Slide 2"
    },
    {
      "type": "image_picker",
      "id": "slide_2_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_2_heading",
      "label": "Heading"
    },
    {
      "type": "text",
      "id": "slide_2_subheading",
      "label": "Subheading"
    },
    {
      "type": "richtext",
      "id": "slide_2_body",
      "label": "Body text"
    },
    {
      "type": "product",
      "id": "slide_2_product",
      "label": "Featured product"
    },
    {
      "type": "color",
      "id": "slide_2_background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Slide 3"
    },
    {
      "type": "image_picker",
      "id": "slide_3_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_3_heading",
      "label": "Heading"
    },
    {
      "type": "text",
      "id": "slide_3_subheading",
      "label": "Subheading"
    },
    {
      "type": "richtext",
      "id": "slide_3_body",
      "label": "Body text"
    },
    {
      "type": "product",
      "id": "slide_3_product",
      "label": "Featured product"
    },
    {
      "type": "color",
      "id": "slide_3_background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Slide 4"
    },
    {
      "type": "image_picker",
      "id": "slide_4_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_4_heading",
      "label": "Heading"
    },
    {
      "type": "text",
      "id": "slide_4_subheading",
      "label": "Subheading"
    },
    {
      "type": "richtext",
      "id": "slide_4_body",
      "label": "Body text"
    },
    {
      "type": "product",
      "id": "slide_4_product",
      "label": "Featured product"
    },
    {
      "type": "color",
      "id": "slide_4_background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Slide 5"
    },
    {
      "type": "image_picker",
      "id": "slide_5_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "slide_5_heading",
      "label": "Heading"
    },
    {
      "type": "text",
      "id": "slide_5_subheading",
      "label": "Subheading"
    },
    {
      "type": "richtext",
      "id": "slide_5_body",
      "label": "Body text"
    },
    {
      "type": "product",
      "id": "slide_5_product",
      "label": "Featured product"
    },
    {
      "type": "color",
      "id": "slide_5_background_color",
      "label": "Background color",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "Image carousel"
    }
  ]
}
{% endschema %}
